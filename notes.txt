support: https://www.allphptricks.com/simple-laravel-10-user-roles-and-permissions/


Install Laravel 10 App
install breeze : https://laravel.com/docs/11.x/starter-kits#laravel-breeze
blade + alpine
install vue : https://laraveldaily.com/post/how-to-add-vue-3-laravel-10-vite-quick-tutorial
Install  Spatie Laravel Permission Package : composer require spatie/laravel-permission
Add Role and Permission Middleware
Create a Product Model with Migration, Resource Controller and Form Requests
Update Migration and Model of Product
Add Spatie Traits in User Model
Create Role, Permission and Super Admin Seeder
Configure Database Credentials
Migrate Tables and Seed to Database
Defining a Super Admin in AuthServiceProvider
Enable Bootstrap 5 in AppServiceProvider
Laravel Bootstrap Auth Scaffolding – User Register and Login
Define Role, User and Product Resource Routes
Create Role and User Resource Controllers
Update Role, User and Product Controllers
Make Role and User Form Requests
Update Role, User and Product Store and Update Form Requests
Create Role, User and Product Resource Blade View Files
Update Application Layout and Home Blade View Files
Run Laravel Development Server


user connecte api



composables/products*index.js

dans tailwind.css verification que la ligne suivante existe : './resources/js/**/*.vue',

gestion des evenement (tiny-emetter pour laravel 9 qui ne fonctionne pas avec Laravel 10)

creation de eventBus.js
import { ref } from "vue";
const bus = ref(new Map());

export default function useEventsBus(){

    function emit(event, ...args) {
        bus.value.set(event, args);
    }

    return {
        emit,
        bus
    }
}

dans AddToCart : emitter
import useEventBus from '../eventBus.js';

const { emit } = useEventBus();

 emit('cartCountUpdated', cartCount)

dans NavbarCart utilisation de watch()
import de eventBus
const {bus} = useEventBus();

watch(()=> bus.value.get('cartCountUpdated'), (count) => {
    const[cartCountUpdatedBus]=count;

    cartCount.value = cartCountUpdatedBus
});
*********************************************************************
dans products/index.js
import {ref} from 'vue';

export default function useProducts() {

    const products = ref([]);
    const cartCount = ref(0);


    const getProducts = async() => {
        let response = await axios.get('/api/products');
        console.log(response.data)
        products.value = response.data.cartContent;
        cartCount.value = response.data.cartCount
    }
    const add= async(productId) => {
        let response = await axios.post('/api/products',{
            productId: productId
        });


        return response.data.count
    }
    const getCount = async() => {
        let response = await axios.get('/api/products/count');
        //console.log(response.data.count)
        return response.data.count
    }

    return {
        add,
        getCount,
        getProducts,
        products,
        cartCount
    }
}
******************************************************************

vue toast : https://github.com/MeForma/vue-toaster

npm install @meforma/vue-toaster

probleme au niveau de l'import passe par un service d'injection

creation des toaster : produit ajouter + veuillez vous login'

Creation de ShoppingCart.vue


add button + & -

*************remarque pour eviter le saut de ligne dans vsd**************
dans le repertoire .editorconfig mettre à false la ligne suivante :insert_final_newline = false
*************************************************************************

dans shoopingcart :
creation methode increase + decrease
dans products/index.js

